name: Nightly
on:
  - push
  - pull_request
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
    env:
      JULIA_PKG_SERVER: ''
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - run: |
          # Install matplotlib into system Python
          set -x
          /usr/bin/python3 -m pip install matplotlib
      - run: |
          # Instantiate Pkg
          julia --project=@. -e '
            using Pkg
            println("Set up registries")
            Pkg.Registry.add(RegistrySpec(url="https://github.com/JuliaRegistries/General.git"))
            Pkg.Registry.add(RegistrySpec(url="https://github.com/JuliaQuantumControl/QuantumControlRegistry.git"))
            println("Dev-install QuantumPropagators")
            Pkg.develop(url="https://github.com/JuliaQuantumControl/QuantumPropagators.jl.git#master")
            println("Dev-install QuantumControlBase")
            Pkg.develop(url="https://github.com/JuliaQuantumControl/QuantumControlBase.jl.git#master")
            println("Dev-install Krotov")
            Pkg.develop(url="https://github.com/JuliaQuantumControl/Krotov.jl.git#master")
            println("Dev-install QuantumControl")
            Pkg.develop(url="https://github.com/JuliaQuantumControl/QuantumControl.jl.git#master")
            println("Dev-install GRAPELinesearchAnalysis")
            Pkg.develop(url="https://github.com/JuliaQuantumControl/GRAPELinesearchAnalysis.jl.git#master")
            println("Pkg.instantiate()")
            Pkg.precompile()
            Pkg.instantiate()'
      - run: |
          # Run tests
          julia --threads auto --project=@. -e '
            using Pkg
            Pkg.activate(".")
            Pkg.test()'
